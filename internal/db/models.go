// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

// Git repository commits
type Commit struct {
	RepoID         uuid.UUID
	Hash           string
	Message        string
	AuthorName     string
	AuthorEmail    string
	AuthorWhen     time.Time
	CommitterName  string
	CommitterEmail string
	CommitterWhen  time.Time
	Parents        int32
}

// Commit stats
type CommitStat struct {
	RepoID     uuid.UUID
	CommitHash string
	FilePath   string
	Additions  int32
	Deletions  int32
}

type GithubRepoInfo struct {
	RepoID   uuid.UUID
	Owner    string
	Name     string
	Metadata pgtype.JSONB
}

type MergestatLatestRepoSync struct {
	ID         int64
	CreatedAt  time.Time
	RepoSyncID uuid.UUID
	Status     string
	StartedAt  sql.NullTime
	DoneAt     sql.NullTime
}

// Table for "dynamic" repo imports - regularly loading from a GitHub org for example
type MergestatRepoImport struct {
	ID                  uuid.UUID
	CreatedAt           time.Time
	UpdatedAt           time.Time
	Type                string
	Settings            pgtype.JSONB
	LastImport          sql.NullTime
	ImportInterval      sql.NullString
	LastImportStartedAt sql.NullTime
}

// Types of repo imports
type MergestatRepoImportType struct {
	Type        string
	Description string
}

type MergestatRepoSync struct {
	RepoID   uuid.UUID
	SyncType string
	Settings pgtype.JSONB
	ID       uuid.UUID
}

type MergestatRepoSyncLog struct {
	ID              int64
	CreatedAt       time.Time
	LogType         string
	Message         string
	RepoSyncQueueID int64
}

type MergestatRepoSyncLogType struct {
	Type        string
	Description sql.NullString
}

type MergestatRepoSyncQueue struct {
	ID         int64
	CreatedAt  time.Time
	RepoSyncID uuid.UUID
	Status     string
	StartedAt  sql.NullTime
	DoneAt     sql.NullTime
}

type MergestatRepoSyncQueueStatusType struct {
	Type        string
	Description sql.NullString
}

type MergestatRepoSyncType struct {
	Type        string
	Description sql.NullString
}

// Git repositories to track
type Repo struct {
	ID           uuid.UUID
	Repo         string
	Ref          sql.NullString
	IsGithub     sql.NullBool
	CreatedAt    time.Time
	Settings     pgtype.JSONB
	Tags         pgtype.JSONB
	RepoImportID uuid.NullUUID
}
